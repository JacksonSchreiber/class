CUT
cut -d<delimiter> -f<field> 
	ls -l | cut -d: -f2 -s | cut -d' ' -f2 | cut -d. -f1- -s > names // removes names from saving to names file

####################################################################################################################################################

FIND
find <dir> -not -name "*~*" -exec cp {} <destination dir> \;

####################################################################################################################################################

&&, ||, {}
&& - AND -- run command only if first works (cmd1 && cmd2)
|| - OR -- run command only if first doesn't work (cmd1 || cmd2)
{...} - run multiple commands after AND/OR
	file thisfile || {echo this isn't a file; echo its not}



2>  -  send errors to file
	find /root/ 2> errors > success //sends all errors to errors file, the rest to success
	find / -inum 999 -printf "%f\n" 2> /dev/null > success 

/dev/null  -  bit bucket

####################################################################################################################################################

AWK
cat /etc/passwd | awk -F: '{print $1}'
cat /etc/passwd | awk 'BEGIN {FS=":"} {print $1, $3}'
    //field separate by : and show 1st and 3rd field
    //$0 prints everything
awk 'BEGIN {FS=":"} ($3 > 3) && ($7 == "/bin/bash") {print $1}' /etc/passwd > SED/names.txt //find account name with UID > 3 and that has bash shell.
                    //UID > 3   //shell is bash     //print name



cat /etc/passwd | awk -F: '($2 = "Password Goes Here") {print $0}'
    //replace field 2 with Password Goes Here

//$NF gives last field

####################################################################################################################################################

SORT
sort -n // sorts by number size
    //-r reverse

cat /etc/passwd | sort -t : -k 3n
    //sort by 3rd field. delimiter is ":", n means 3rd field is a number

####################################################################################################################################################

UNIQ
cat file |dmesg -k | grep -P '(CPU|BIOS)' | grep -Piv '(irq|idle)' | awk -F'] ' '{print $2}' sort -n | uniq -c //always sort before uniq. uniq -c shows how many instances of each entry

####################################################################################################################################################

REGEX
grep -Po "^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}" iplist | sort -n | uniq -c //finds IPs, then displays most common IPs

grep -Po "(\b[0-9]\.|\b[0-9][0-9]\.|\b1[0-9][0-9]\.|\b2[0-4][0-9]\.|\b25[0-5]\.){1}([0-9]\.|[0-9][0-9]\.|1[0-9][0-9]\.|2[0-4][0-9]\.|25[0-5]\.){2}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}\b" iplist | sort -n | uniq -c // only valid IPs

####################################################################################################################################################

CONDITIONALS
man test

-eq, -ge, -gt, -le, -lt for integers
<, >, ... for strings

IF STATEMENT

if[[ condition ]]; then #every if needs a matching fi and then
    command;
    elif [[ condition]]; then #must have space after [[
        command;
    else
        command;
fi

####################################################################################################################################################

VARIABLES
A=1
echo $A

A=$(head /etc/passwd)
echo $A

A=`head /etc/passwd`
echo $A

#When var set, does not change


####################################################################################################################################################


MATH

A=120
B=20

expr $A - $B
expr $A + $B
expr $A \* $B

echo $(( $A + $B - $A + $B ))


####################################################################################################################################################

EXIT CODES

echo $?
    0 #Successful exec

cat /etsdfsd/fsfds
echo $?
    1 #error code. may be a different number


####################################################################################################################################################

LOOPS

for x in {0..10}; do
    echo $x
done

for x in $(cat songs.txt); do
    echo $x
done



x=0
while [[ $x -le 10 ]]; do
    echo $x
done

for ((i=0; i < 5; i++)); do #C Style
    echo $i
done
####################################################################################################################################################

 noydujap@yevme.com
 password: spotify


 ACTIVITY 8:
 dmesg -k | grep -P '(CPU|BIOS)' | grep -Piv '(irq|idle)' | awk -F'] ' '{print $2}'
          #Lines w/ CPU/BIOS    #lines without irq/idle     #remove brackets [.....]
                                 (v=negate, i=case insens)

####################################################################################################################################################


ACTIVITY 9:

1.)make hash
    PW$(openssl passwd -1 -salt bad4u Password1234)
2.) use AWK
    awk -F: -v "str=$PW" 'BEGIN {OFS=":"} {$2=str; print $0}' shadow.txt
3.) Alternative
    sed "s+\([^:*\):[^:]]*+\1:$PW+" shadow.txt


####################################################################################################################################################


ACTIVITY 10:
    1.) sed -e '/\/bin\/sh$/d' -e '/\/bin\/false$/d' /etc/passwd > passwd.txt




####################################################################################################################################################

ACTIVITY 11:

find / -name *.bin 2> /dev/null | awk 'BEGIN {FS="/";OFS=FS;}{$NF="";}{print $0}' | uniq -c
#find all .bins, remove erors   #Field Separator=/, Output Field Separator=Field Separator, End field = nothing, print everything   #Sort


####################################################################################################################################################

ACTIVITY 13:
script: act13.sh


####################################################################################################################################################

TEST
#copy file to home dir
#!/bin/bash goes to top (above other comments)
